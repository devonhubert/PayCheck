{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/devonhubert/languages/javascript/react_native/PayCheck/components/GoalWindow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Goal from \"./Goal\";\nimport Spacer from \"../components/Spacer\";\n\nvar styles = require(\"../Styles\");\n\nvar GoalWindow = function (_Component) {\n  _inherits(GoalWindow, _Component);\n\n  var _super = _createSuper(GoalWindow);\n\n  function GoalWindow(props) {\n    var _this;\n\n    _classCallCheck(this, GoalWindow);\n\n    _this = _super.call(this, props);\n\n    _this.dictionaryToArray = function (dictionary) {\n      var myArray = [];\n\n      for (var key in dictionary) {\n        var arr = [dictionary[key]];\n        myArray = arr.concat(myArray);\n      }\n\n      return myArray;\n    };\n\n    _this.displayGoals = function () {\n      if (Object.keys(_this.props.goals).length <= 0) {\n        return React.createElement(View, {\n          style: {\n            alignSelf: 'center',\n            padding: 10\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }\n        }, React.createElement(Spacer, {\n          numSpaces: \"3\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: styles.goalTextHeader,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }, \"No Active Goals.\"), React.createElement(Text, {\n          style: styles.goalTextHeader,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }, \"Add One Above!\"), React.createElement(Spacer, {\n          numSpaces: \"5\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: {\n            alignSelf: 'center',\n            padding: 10\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/newLogo.png\"),\n          style: {\n            height: 100,\n            width: 100\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, _this.dictionaryToArray(_this.props.goals).map(function (goal) {\n          return React.createElement(View, {\n            key: goal.key,\n            style: styles.padding,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          }, React.createElement(Goal, {\n            name: goal.name,\n            needed: goal.needed,\n            earned: goal.earned,\n            goal: goal,\n            removeGoal: _this.props.removeGoal,\n            returnMoneyEarned: _this.props.setGoalMoneyEarned,\n            totalMoneyEarned: _this.props.totalMoneyEarned,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }\n          }));\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoalWindow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(Spacer, {\n        numSpaces: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          alignSelf: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.goalTextHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, \"Total Earned: $\", this.props.totalMoneyEarned)), React.createElement(Spacer, {\n        numSpaces: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      })), React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, this.displayGoals()));\n    }\n  }]);\n\n  return GoalWindow;\n}(Component);\n\nexport default GoalWindow;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/components/GoalWindow.js"],"names":["React","Component","Goal","Spacer","styles","require","GoalWindow","props","dictionaryToArray","dictionary","myArray","key","arr","concat","displayGoals","Object","keys","goals","length","alignSelf","padding","goalTextHeader","height","width","map","goal","name","needed","earned","removeGoal","setGoalMoneyEarned","totalMoneyEarned","scrollView"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { \n  View, ScrollView, Text, Image\n} from 'react-native';\nimport Goal from './Goal';\nimport Spacer from '../components/Spacer';\nconst styles = require('../Styles');\n\nclass GoalWindow extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //TEMPORARY FIX\n  dictionaryToArray = (dictionary) => {\n    let myArray = [];\n\n    for(var key in dictionary){\n      let arr = [dictionary[key]];\n      myArray = arr.concat(myArray);\n    }\n    return myArray;\n  }\n\n  displayGoals = () => {\n    if(Object.keys(this.props.goals).length <= 0) {\n      return(\n        <View style={{alignSelf:'center', padding:10}}>\n          <Spacer numSpaces='3' /> \n          <Text style={styles.goalTextHeader}>No Active Goals.</Text>\n          <Text style={styles.goalTextHeader}>Add One Above!</Text>\n          <Spacer numSpaces='5' /> \n          <View style={{alignSelf:'center', padding:10}}>\n            <Image source={require('../assets/newLogo.png')} style={{height:100, width:100}} />\n          </View>\n        </View>\n      );\n    } else {\n      return(\n        <View>\n           \n          {this.dictionaryToArray(this.props.goals).map(goal => (\n            <View key={goal.key} style={styles.padding}>\n              <Goal\n                name={goal.name} \n                needed={goal.needed} \n                earned={goal.earned} \n                goal={goal}\n                removeGoal={this.props.removeGoal}\n                returnMoneyEarned={this.props.setGoalMoneyEarned}\n                totalMoneyEarned={this.props.totalMoneyEarned}\n              /> \n            </View>\n          ))} \n\n        </View>\n      );\n    }\n    \n  }\n\n  render() {\n    return(\n      <>\n        <View style={styles.scrollView}>\n          <Spacer numSpaces='1' />\n            <View style={{alignSelf:'center'}}>\n              <Text style={styles.goalTextHeader}>Total Earned: ${this.props.totalMoneyEarned}</Text>\n            </View>\n          <Spacer numSpaces='1' />  \n        </View>\n        \n        <ScrollView style={styles.scrollView}> \n          {this.displayGoals()}\n        </ScrollView>\n      </>\n    );\n  }\n\n}\n\nexport default GoalWindow;\n\n"]},"metadata":{},"sourceType":"module"}