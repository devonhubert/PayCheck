{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/devonhubert/languages/javascript/react_native/PayCheck/node_modules/react-navigation-stack/dist/views/Transitioner.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport invariant from \"../utils/invariant\";\nimport NavigationScenesReducer from \"./ScenesReducer\";\nvar DefaultTransitionSpec = {\n  duration: 250,\n  easing: Easing.inOut(Easing.ease),\n  timing: Animated.timing\n};\n\nvar Transitioner = function (_React$Component) {\n  _inherits(Transitioner, _React$Component);\n\n  var _super = _createSuper(Transitioner);\n\n  function Transitioner(_props, context) {\n    var _this;\n\n    _classCallCheck(this, Transitioner);\n\n    _this = _super.call(this, _props, context);\n\n    _this._computeScenes = function (props, nextProps) {\n      var nextScenes = NavigationScenesReducer(_this.state.scenes, nextProps.navigation.state, props.navigation.state, nextProps.descriptors);\n\n      if (!nextProps.navigation.state.isTransitioning) {\n        nextScenes = filterStale(nextScenes);\n      }\n\n      if (nextProps.screenProps !== _this.props.screenProps) {\n        _this.setState({\n          nextScenes: nextScenes\n        });\n      }\n\n      if (nextScenes === _this.state.scenes) {\n        return;\n      }\n\n      return nextScenes;\n    };\n\n    _this._onLayout = function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          height = _event$nativeEvent$la.height,\n          width = _event$nativeEvent$la.width;\n\n      if (_this.state.layout.initWidth === width && _this.state.layout.initHeight === height) {\n        return;\n      }\n\n      var layout = _objectSpread(_objectSpread({}, _this.state.layout), {}, {\n        initHeight: height,\n        initWidth: width,\n        isMeasured: true\n      });\n\n      layout.height.setValue(height);\n      layout.width.setValue(width);\n\n      var nextState = _objectSpread(_objectSpread({}, _this.state), {}, {\n        layout: layout\n      });\n\n      _this._transitionProps = buildTransitionProps(_this.props, nextState);\n\n      _this.setState(nextState);\n    };\n\n    _this._onTransitionEnd = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var prevTransitionProps = _this._prevTransitionProps;\n      _this._prevTransitionProps = null;\n      var scenes = filterStale(_this.state.scenes);\n\n      var nextState = _objectSpread(_objectSpread({}, _this.state), {}, {\n        scenes: scenes\n      });\n\n      _this._transitionProps = buildTransitionProps(_this.props, nextState);\n\n      _this.setState(nextState, function _callee() {\n        var result, prevProps;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.props.onTransitionEnd) {\n                  _context.next = 5;\n                  break;\n                }\n\n                result = _this.props.onTransitionEnd(_this._transitionProps, prevTransitionProps);\n\n                if (!(result instanceof Promise)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(result);\n\n              case 5:\n                if (_this._queuedTransition) {\n                  prevProps = _this._queuedTransition.prevProps;\n                  _this._queuedTransition = null;\n\n                  _this._startTransition(prevProps, _this.props);\n                } else {\n                  _this._isTransitionRunning = false;\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    var _layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0)\n    };\n    var position = new Animated.Value(_this.props.navigation.state.index);\n    _this._positionListener = position.addListener(function () {});\n    _this.state = {\n      layout: _layout,\n      position: position,\n      scenes: NavigationScenesReducer([], _this.props.navigation.state, null, _this.props.descriptors)\n    };\n    _this._prevTransitionProps = null;\n    _this._transitionProps = buildTransitionProps(_props, _this.state);\n    _this._isMounted = false;\n    _this._isTransitionRunning = false;\n    _this._queuedTransition = null;\n    return _this;\n  }\n\n  _createClass(Transitioner, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this._positionListener && this.state.position.removeListener(this._positionListener);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this._isTransitionRunning) {\n        if (!this._queuedTransition) {\n          this._queuedTransition = {\n            prevProps: this.props\n          };\n        }\n\n        return;\n      }\n\n      this._startTransition(this.props, nextProps);\n    }\n  }, {\n    key: \"_startTransition\",\n    value: function _startTransition(props, nextProps) {\n      var _this2 = this;\n\n      var indexHasChanged = props.navigation.state.index !== nextProps.navigation.state.index;\n\n      var nextScenes = this._computeScenes(props, nextProps);\n\n      if (!nextScenes) {\n        this._prevTransitionProps = this._transitionProps;\n        this.state.position.setValue(props.navigation.state.index);\n\n        this._onTransitionEnd();\n\n        return;\n      }\n\n      var nextState = _objectSpread(_objectSpread({}, this.state), {}, {\n        scenes: nextScenes\n      });\n\n      var position = nextState.position;\n      var toValue = nextProps.navigation.state.index;\n      this._prevTransitionProps = this._transitionProps;\n      this._transitionProps = buildTransitionProps(nextProps, nextState);\n      var isTransitioning = this._transitionProps.navigation.state.isTransitioning;\n\n      if (!isTransitioning || !indexHasChanged) {\n        this.setState(nextState, function _callee2() {\n          var result;\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!nextProps.onTransitionStart) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  result = nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);\n\n                  if (!(result instanceof Promise)) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  _context2.next = 5;\n                  return _regeneratorRuntime.awrap(result);\n\n                case 5:\n                  indexHasChanged && position.setValue(toValue);\n\n                  _this2._onTransitionEnd();\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n      } else if (isTransitioning) {\n        this._isTransitionRunning = true;\n        this.setState(nextState, function _callee3() {\n          var result;\n          return _regeneratorRuntime.async(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!nextProps.onTransitionStart) {\n                    _context3.next = 5;\n                    break;\n                  }\n\n                  result = nextProps.onTransitionStart(_this2._transitionProps, _this2._prevTransitionProps);\n\n                  if (!(result instanceof Promise)) {\n                    _context3.next = 5;\n                    break;\n                  }\n\n                  _context3.next = 5;\n                  return _regeneratorRuntime.awrap(result);\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        });\n        var transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;\n\n        var transitionSpec = _objectSpread(_objectSpread({}, DefaultTransitionSpec), transitionUserSpec);\n\n        var timing = transitionSpec.timing;\n        delete transitionSpec.timing;\n        var positionHasChanged = position.__getValue() !== toValue;\n\n        if (indexHasChanged && positionHasChanged) {\n          timing(position, _objectSpread(_objectSpread({}, transitionSpec), {}, {\n            toValue: nextProps.navigation.state.index\n          })).start(function () {\n            requestAnimationFrame(_this2._onTransitionEnd);\n          });\n        } else {\n          this._onTransitionEnd();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        onLayout: this._onLayout,\n        style: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 12\n        }\n      }, this.props.render(this._transitionProps, this._prevTransitionProps));\n    }\n  }]);\n\n  return Transitioner;\n}(React.Component);\n\nfunction buildTransitionProps(props, state) {\n  var navigation = props.navigation,\n      options = props.options;\n  var layout = state.layout,\n      position = state.position,\n      scenes = state.scenes;\n  var scene = scenes.find(isSceneActive);\n  invariant(scene, 'Could not find active scene');\n  return {\n    layout: layout,\n    navigation: navigation,\n    position: position,\n    scenes: scenes,\n    scene: scene,\n    options: options,\n    index: scene.index\n  };\n}\n\nfunction isSceneNotStale(scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes) {\n  var filtered = scenes.filter(isSceneNotStale);\n\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n\n  return filtered;\n}\n\nfunction isSceneActive(scene) {\n  return scene.isActive;\n}\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  }\n});\nexport default Transitioner;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/node_modules/react-navigation-stack/dist/views/Transitioner.js"],"names":["React","invariant","NavigationScenesReducer","DefaultTransitionSpec","duration","easing","Easing","inOut","ease","timing","Animated","Transitioner","props","context","_computeScenes","nextProps","nextScenes","state","scenes","navigation","descriptors","isTransitioning","filterStale","screenProps","setState","_onLayout","event","nativeEvent","layout","height","width","initWidth","initHeight","isMeasured","setValue","nextState","_transitionProps","buildTransitionProps","_onTransitionEnd","_isMounted","prevTransitionProps","_prevTransitionProps","onTransitionEnd","result","Promise","_queuedTransition","prevProps","_startTransition","_isTransitionRunning","Value","position","index","_positionListener","addListener","removeListener","indexHasChanged","toValue","onTransitionStart","transitionUserSpec","configureTransition","transitionSpec","positionHasChanged","__getValue","start","requestAnimationFrame","styles","main","render","Component","options","scene","find","isSceneActive","isSceneNotStale","isStale","filtered","filter","length","isActive","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, Easing, StyleSheet, View } from 'react-native';\nimport invariant from '../utils/invariant';\n\nimport NavigationScenesReducer from './ScenesReducer';\n\n// Used for all animations unless overriden\nconst DefaultTransitionSpec = {\n  duration: 250,\n  easing: Easing.inOut(Easing.ease),\n  timing: Animated.timing\n};\n\nclass Transitioner extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0)\n    };\n\n    const position = new Animated.Value(this.props.navigation.state.index);\n    this._positionListener = position.addListener(() => /* { value } */{\n      // This should work until we detach position from a view! so we have to be\n      // careful to not ever detach it, thus the gymnastics in _getPosition in\n      // StackViewLayout\n      // This should log each frame when releasing the gesture or when pressing\n      // the back button! If not, something has gone wrong with the animated\n      // value subscription\n      // console.log(value);\n    });\n\n    this.state = {\n      layout,\n      position,\n      scenes: NavigationScenesReducer([], this.props.navigation.state, null, this.props.descriptors)\n    };\n\n    this._prevTransitionProps = null;\n    this._transitionProps = buildTransitionProps(props, this.state);\n\n    this._isMounted = false;\n    this._isTransitionRunning = false;\n    this._queuedTransition = null;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this._positionListener && this.state.position.removeListener(this._positionListener);\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(nextProps) {\n    if (this._isTransitionRunning) {\n      if (!this._queuedTransition) {\n        this._queuedTransition = { prevProps: this.props };\n      }\n      return;\n    }\n\n    this._startTransition(this.props, nextProps);\n  }\n\n  _computeScenes = (props, nextProps) => {\n    let nextScenes = NavigationScenesReducer(this.state.scenes, nextProps.navigation.state, props.navigation.state, nextProps.descriptors);\n\n    if (!nextProps.navigation.state.isTransitioning) {\n      nextScenes = filterStale(nextScenes);\n    }\n\n    // Update nextScenes when we change screenProps\n    // This is a workaround for https://github.com/react-navigation/react-navigation/issues/4271\n    if (nextProps.screenProps !== this.props.screenProps) {\n      this.setState({ nextScenes });\n    }\n\n    if (nextScenes === this.state.scenes) {\n      return;\n    }\n\n    return nextScenes;\n  };\n\n  _startTransition(props, nextProps) {\n    const indexHasChanged = props.navigation.state.index !== nextProps.navigation.state.index;\n    let nextScenes = this._computeScenes(props, nextProps);\n\n    if (!nextScenes) {\n      // prevTransitionProps are the same as transitionProps in this case\n      // because nothing changed\n      this._prevTransitionProps = this._transitionProps;\n\n      // Unsure if this is actually a good idea... Also related to\n      // https://github.com/react-navigation/react-navigation/issues/5247\n      // - the animation is interrupted before completion so this ensures\n      // that it is properly set to the final position before firing\n      // onTransitionEnd\n      this.state.position.setValue(props.navigation.state.index);\n\n      this._onTransitionEnd();\n      return;\n    }\n\n    const nextState = {\n      ...this.state,\n      scenes: nextScenes\n    };\n\n    // grab the position animated value\n    const { position } = nextState;\n\n    // determine where we are meant to transition to\n    const toValue = nextProps.navigation.state.index;\n\n    // compute transitionProps\n    this._prevTransitionProps = this._transitionProps;\n    this._transitionProps = buildTransitionProps(nextProps, nextState);\n    let { isTransitioning } = this._transitionProps.navigation.state;\n\n    // if the state isn't transitioning that is meant to signal that we should\n    // transition immediately to the new index. if the index hasn't changed, do\n    // the same thing here. it's not clear to me why we ever start a transition\n    // when the index hasn't changed, this requires further investigation.\n    if (!isTransitioning || !indexHasChanged) {\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n          if (result instanceof Promise) {\n            // why do we bother awaiting the result here?\n            await result;\n          }\n        }\n        // jump immediately to the new value\n        indexHasChanged && position.setValue(toValue);\n        // end the transition\n        this._onTransitionEnd();\n      });\n    } else if (isTransitioning) {\n      this._isTransitionRunning = true;\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(this._transitionProps, this._prevTransitionProps);\n\n          // why do we bother awaiting the result here?\n          if (result instanceof Promise) {\n            await result;\n          }\n        }\n      });\n\n      // get the transition spec.\n      const transitionUserSpec = nextProps.configureTransition ? nextProps.configureTransition(this._transitionProps, this._prevTransitionProps) : null;\n\n      const transitionSpec = {\n        ...DefaultTransitionSpec,\n        ...transitionUserSpec\n      };\n\n      const { timing } = transitionSpec;\n      delete transitionSpec.timing;\n\n      // if swiped back, indexHasChanged == true && positionHasChanged == false\n      const positionHasChanged = position.__getValue() !== toValue;\n      if (indexHasChanged && positionHasChanged) {\n        timing(position, {\n          ...transitionSpec,\n          toValue: nextProps.navigation.state.index\n        }).start(() => {\n          // In case the animation is immediately interrupted for some reason,\n          // we move this to the next frame so that onTransitionStart can fire\n          // first (https://github.com/react-navigation/react-navigation/issues/5247)\n          requestAnimationFrame(this._onTransitionEnd);\n        });\n      } else {\n        this._onTransitionEnd();\n      }\n    }\n  }\n\n  render() {\n    return <View onLayout={this._onLayout} style={styles.main}>\n        {this.props.render(this._transitionProps, this._prevTransitionProps)}\n      </View>;\n  }\n\n  _onLayout = event => {\n    const { height, width } = event.nativeEvent.layout;\n    if (this.state.layout.initWidth === width && this.state.layout.initHeight === height) {\n      return;\n    }\n    const layout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    const nextState = {\n      ...this.state,\n      layout\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n    this.setState(nextState);\n  };\n\n  _onTransitionEnd = () => {\n    if (!this._isMounted) {\n      return;\n    }\n    const prevTransitionProps = this._prevTransitionProps;\n    this._prevTransitionProps = null;\n\n    const scenes = filterStale(this.state.scenes);\n\n    const nextState = {\n      ...this.state,\n      scenes\n    };\n\n    this._transitionProps = buildTransitionProps(this.props, nextState);\n\n    this.setState(nextState, async () => {\n      if (this.props.onTransitionEnd) {\n        const result = this.props.onTransitionEnd(this._transitionProps, prevTransitionProps);\n\n        if (result instanceof Promise) {\n          await result;\n        }\n      }\n\n      if (this._queuedTransition) {\n        let { prevProps } = this._queuedTransition;\n        this._queuedTransition = null;\n        this._startTransition(prevProps, this.props);\n      } else {\n        this._isTransitionRunning = false;\n      }\n    });\n  };\n}\n\nfunction buildTransitionProps(props, state) {\n  const { navigation, options } = props;\n\n  const { layout, position, scenes } = state;\n\n  const scene = scenes.find(isSceneActive);\n\n  invariant(scene, 'Could not find active scene');\n\n  return {\n    layout,\n    navigation,\n    position,\n    scenes,\n    scene,\n    options,\n    index: scene.index\n  };\n}\n\nfunction isSceneNotStale(scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes) {\n  const filtered = scenes.filter(isSceneNotStale);\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n  return filtered;\n}\n\nfunction isSceneActive(scene) {\n  return scene.isActive;\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1\n  }\n});\n\nexport default Transitioner;"]},"metadata":{},"sourceType":"module"}