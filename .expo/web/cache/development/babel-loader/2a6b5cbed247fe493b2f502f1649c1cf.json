{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScreenForRouteName;\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require(\"../utils/invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getScreenForRouteName(routeConfigs, routeName) {\n  var routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\"There is no route defined for key \" + routeName + \".\\n\" + (\"Must be one of: \" + Object.keys(routeConfigs).map(function (a) {\n      return \"'\" + a + \"'\";\n    }).join(',')));\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    var screen = routeConfig.getScreen();\n    (0, _invariant2.default)((0, _reactIs.isValidElementType)(screen), \"The getScreen defined for route '\" + routeName + \" didn't return a valid \" + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + (routeName + \": {\\n  getScreen: () => require('./MyScreen').default\\n}\"));\n    return screen;\n  }\n\n  return routeConfig;\n}","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/node_modules/@react-navigation/core/dist/routers/getScreenForRouteName.js"],"names":["Object","defineProperty","exports","value","default","getScreenForRouteName","_reactIs","require","_invariant","_invariant2","_interopRequireDefault","obj","__esModule","routeConfigs","routeName","routeConfig","Error","keys","map","a","join","screen","getScreen","isValidElementType"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,qBAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,sBAAxB;;AAEA,IAAIE,WAAW,GAAGC,sBAAsB,CAACF,UAAD,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAM/F,SAASN,qBAAT,CAA+BQ,YAA/B,EAA6CC,SAA7C,EAAwD;AACtD,MAAIC,WAAW,GAAGF,YAAY,CAACC,SAAD,CAA9B;;AAEA,MAAI,CAACC,WAAL,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAU,uCAAqCF,SAArC,iCAAyEd,MAAM,CAACiB,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8B,UAAAC,CAAC;AAAA,mBAAQA,CAAR;AAAA,KAA/B,EAA6CC,IAA7C,CAAkD,GAAlD,CAAzE,CAAV,CAAN;AACD;;AAED,MAAIL,WAAW,CAACM,MAAhB,EAAwB;AACtB,WAAON,WAAW,CAACM,MAAnB;AACD;;AAED,MAAI,OAAON,WAAW,CAACO,SAAnB,KAAiC,UAArC,EAAiD;AAC/C,QAAID,MAAM,GAAGN,WAAW,CAACO,SAAZ,EAAb;AACA,KAAC,GAAGb,WAAW,CAACL,OAAhB,EAAyB,CAAC,GAAGE,QAAQ,CAACiB,kBAAb,EAAiCF,MAAjC,CAAzB,EAAmE,sCAAoCP,SAApC,+BAAyE,0BAAzE,GAAsG,6BAAtG,IAAyIA,SAAzI,8DAAnE;AACA,WAAOO,MAAP;AACD;;AAED,SAAON,WAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getScreenForRouteName;\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nfunction getScreenForRouteName(routeConfigs, routeName) {\n  var routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(`There is no route defined for key ${routeName}.\\n` + `Must be one of: ${Object.keys(routeConfigs).map(a => `'${a}'`).join(',')}`);\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    var screen = routeConfig.getScreen();\n    (0, _invariant2.default)((0, _reactIs.isValidElementType)(screen), `The getScreen defined for route '${routeName} didn't return a valid ` + 'screen or navigator.\\n\\n' + 'Please pass it like this:\\n' + `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`);\n    return screen;\n  }\n\n  return routeConfig;\n}"]},"metadata":{},"sourceType":"script"}