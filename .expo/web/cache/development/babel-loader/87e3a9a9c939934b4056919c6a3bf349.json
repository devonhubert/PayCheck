{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/devonhubert/languages/javascript/react_native/PayCheck/components/Goal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Spacer from \"./Spacer\";\n\nvar styles = require(\"../Styles\");\n\nvar Goal = function (_Component) {\n  _inherits(Goal, _Component);\n\n  var _super = _createSuper(Goal);\n\n  function Goal(props) {\n    var _this;\n\n    _classCallCheck(this, Goal);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      var moneyAmount = 1.0;\n\n      if (_this.props.earned < Number(_this.props.needed)) {\n        _this.props.returnMoneyEarned(moneyAmount, _this.props.earned, _this.props.goal[\"key\"]);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Goal, [{\n    key: \"calculatePercent\",\n    value: function calculatePercent() {\n      return Math.floor(this.props.earned / this.props.needed * 100);\n    }\n  }, {\n    key: \"showBar\",\n    value: function showBar() {\n      var percent = this.calculatePercent();\n      var result = '';\n      var divisionNumber = 10;\n\n      for (var i = 0; i < divisionNumber; i++) {\n        if (i < Math.floor(percent / divisionNumber)) {\n          result += '#';\n        } else {\n          result += ' ';\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"checkCompleted\",\n    value: function checkCompleted() {\n      if (this.props.earned >= Number(this.props.needed)) {\n        return \"Completed!\";\n      } else {\n        return \"$\" + this.props.needed + \" needed, $\" + this.props.earned + \" earned\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.goalWindow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        color: \"#234041\",\n        onPress: function onPress() {\n          return _this2.props.removeGoal(_this2.props.goal[\"key\"]);\n        },\n        title: \"X\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.goalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"  \", this.props.name), React.createElement(Text, {\n        style: styles.goalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"  \", this.checkCompleted()), React.createElement(Spacer, {\n        numSpaces: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.goalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"  (\", this.calculatePercent(), \"%)\"), React.createElement(Text, {\n        style: styles.goalText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, \"  \", this.showBar())), React.createElement(Button, {\n        color: \"#234041\",\n        onPress: this.onPress,\n        title: \"Add $1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Goal;\n}(Component);\n\nexport default Goal;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/components/Goal.js"],"names":["React","Component","Spacer","styles","require","Goal","props","onPress","moneyAmount","earned","Number","needed","returnMoneyEarned","goal","Math","floor","percent","calculatePercent","result","divisionNumber","i","goalWindow","removeGoal","padding","goalText","name","checkCompleted","showBar"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP;;AACA,IAAMC,MAAM,GAAGC,OAAO,aAAtB;;IAIMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAuBnBC,OAvBmB,GAuBT,YAAM;AACd,UAAIC,WAAW,GAAG,GAAlB;;AAEA,UAAG,MAAKF,KAAL,CAAWG,MAAX,GAAoBC,MAAM,CAAC,MAAKJ,KAAL,CAAWK,MAAZ,CAA7B,EAAkD;AAChD,cAAKL,KAAL,CAAWM,iBAAX,CAA6BJ,WAA7B,EAA0C,MAAKF,KAAL,CAAWG,MAArD,EAA6D,MAAKH,KAAL,CAAWO,IAAX,CAAgB,KAAhB,CAA7D;AACD;AACF,KA7BkB;;AAAA;AAElB;;;;uCAEkB;AACjB,aAAOC,IAAI,CAACC,KAAL,CAAY,KAAKT,KAAL,CAAWG,MAAX,GAAkB,KAAKH,KAAL,CAAWK,MAA9B,GAAwC,GAAnD,CAAP;AACD;;;8BAES;AACR,UAAIK,OAAO,GAAG,KAAKC,gBAAL,EAAd;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,cAAc,GAAG,EAArB;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,cAAnB,EAAmCC,CAAC,EAApC,EAAwC;AACtC,YAAGA,CAAC,GAAGN,IAAI,CAACC,KAAL,CAAWC,OAAO,GAACG,cAAnB,CAAP,EAA2C;AACzCD,UAAAA,MAAM,IAAI,GAAV;AACD,SAFD,MAEO;AACLA,UAAAA,MAAM,IAAI,GAAV;AACD;AACF;;AACD,aAAOA,MAAP;AACD;;;qCAUgB;AACf,UAAG,KAAKZ,KAAL,CAAWG,MAAX,IAAqBC,MAAM,CAAC,KAAKJ,KAAL,CAAWK,MAAZ,CAA9B,EAAmD;AACjD,eAAO,YAAP;AACD,OAFD,MAEO;AACL,eAAO,MAAM,KAAKL,KAAL,CAAWK,MAAjB,GAA0B,YAA1B,GAAyC,KAAKL,KAAL,CAAWG,MAApD,GAA6D,SAApE;AACD;AACF;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACkB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACf,KAAL,CAAWgB,UAAX,CAAsB,MAAI,CAAChB,KAAL,CAAWO,IAAX,CAAgB,KAAhB,CAAtB,CAAN;AAAA,SAFX;AAGE,QAAA,KAAK,EAAC,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACU,UAAAA,OAAO,EAAC;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiC,KAAKlB,KAAL,CAAWmB,IAA5C,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiC,KAAKE,cAAL,EAAjC,CAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkC,KAAKP,gBAAL,EAAlC,OAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACqB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiC,KAAKG,OAAL,EAAjC,CALF,CARF,EAiBE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,KAAKpB,OAFhB;AAGE,QAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,CADF;AA0BD;;;;EAnEgBN,S;;AAsEnB,eAAeI,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport Spacer from './Spacer';\nconst styles = require('../Styles');\n\n\n//Window for a single goal\nclass Goal extends Component {\n  constructor(props) {\n    super(props); \n  }\n  \n  calculatePercent() {\n    return Math.floor((this.props.earned/this.props.needed) * 100);\n  }\n  \n  showBar() {\n    let percent = this.calculatePercent();\n    let result = '';\n    let divisionNumber = 10;\n    \n    for(let i = 0; i < divisionNumber; i++) {\n      if(i < Math.floor(percent/divisionNumber)) {\n        result += '#';\n      } else {\n        result += ' ';\n      }\n    } \n    return result;\n  }\n  \n  onPress = () => {\n    let moneyAmount = 1.0;\n  \n    if(this.props.earned < Number(this.props.needed)) { //Check for floats\n      this.props.returnMoneyEarned(moneyAmount, this.props.earned, this.props.goal[\"key\"]);\n    }\n  }\n  \n  checkCompleted() {\n    if(this.props.earned >= Number(this.props.needed)) {\n      return \"Completed!\";\n    } else {\n      return \"$\" + this.props.needed + \" needed, $\" + this.props.earned + \" earned\";\n    }\n  }\n\n  render() {\n    return (\n      <View style={styles.goalWindow}>    \n        {/*Remove Goal Button*/}\n        <Button\n          color=\"#234041\"\n          onPress={() => this.props.removeGoal(this.props.goal[\"key\"])}\n          title=\"X\"\n        />   \n        \n        <View style={{padding:5}}>\n          <Text style={styles.goalText}>  {this.props.name}</Text>\n          <Text style={styles.goalText}>  {this.checkCompleted()}</Text>\n          <Spacer numSpaces='1' />\n          <Text style={styles.goalText}>  ({this.calculatePercent()}%)</Text>\n          <Text style={styles.goalText}>  {this.showBar()}</Text>\n        </View>\n        \n        {/*Add Funds Button*/}\n        <Button\n          color=\"#234041\"\n          onPress={this.onPress}\n          title=\"Add $1\"\n        />   \n            \n      </View>\n    );\n  }\n}\n\nexport default Goal;"]},"metadata":{},"sourceType":"module"}