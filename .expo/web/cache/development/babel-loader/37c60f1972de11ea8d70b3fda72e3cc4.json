{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/devonhubert/languages/javascript/react_native/PayCheck/components/GoalWindow.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Spacer from \"./Spacer\";\nimport Goal from \"./Goal\";\n\nvar styles = require(\"../Styles\");\n\nvar GoalWindow = function (_Component) {\n  _inherits(GoalWindow, _Component);\n\n  var _super = _createSuper(GoalWindow);\n\n  function GoalWindow(props) {\n    var _this;\n\n    _classCallCheck(this, GoalWindow);\n\n    _this = _super.call(this, props);\n\n    _this.displayGoals = function () {\n      if (_this.props.goals.length <= 0) {\n        return React.createElement(View, {\n          style: {\n            alignSelf: 'center',\n            padding: 10\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.text,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }\n        }, \"No Active Goals. Add One Above!\"));\n      } else {\n        return React.createElement(View, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }\n        }, _this.props.goals.map(function (goal) {\n          return React.createElement(View, {\n            key: goal[\"key\"],\n            style: styles.padding,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }\n          }, React.createElement(Goal, {\n            name: goal[\"name\"],\n            needed: goal[\"needed\"],\n            earned: goal[\"earned\"],\n            goal: goal,\n            removeGoal: _this.props.removeGoal,\n            returnMoneyEarned: _this.props.setGoalMoneyUsed,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }\n          }));\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoalWindow, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, this.displayGoals());\n    }\n  }]);\n\n  return GoalWindow;\n}(Component);\n\nexport default GoalWindow;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/components/GoalWindow.js"],"names":["React","Component","Spacer","Goal","styles","require","GoalWindow","props","displayGoals","goals","length","alignSelf","padding","text","map","goal","removeGoal","setGoalMoneyUsed","scrollView"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAIA,OAAOC,MAAP;AACA,OAAOC,IAAP;;AACA,IAAMC,MAAM,GAAGC,OAAO,aAAtB;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAInBC,YAJmB,GAIJ,YAAM;AACnB,UAAG,MAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,IAA2B,CAA9B,EAAiC;AAC/B,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC,QAAX;AAAqBC,YAAAA,OAAO,EAAC;AAA7B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,CADF;AAKD,OAND,MAMO;AACL,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAKN,KAAL,CAAWE,KAAX,CAAiBK,GAAjB,CAAqB,UAAAC,IAAI;AAAA,iBACxB,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,IAAI,CAAC,KAAD,CAAf;AAAwB,YAAA,KAAK,EAAEX,MAAM,CAACQ,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AACE,YAAA,IAAI,EAAEG,IAAI,CAAC,MAAD,CADZ;AAEE,YAAA,MAAM,EAAEA,IAAI,CAAC,QAAD,CAFd;AAGE,YAAA,MAAM,EAAEA,IAAI,CAAC,QAAD,CAHd;AAIE,YAAA,IAAI,EAAEA,IAJR;AAKE,YAAA,UAAU,EAAE,MAAKR,KAAL,CAAWS,UALzB;AAME,YAAA,iBAAiB,EAAE,MAAKT,KAAL,CAAWU,gBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADwB;AAAA,SAAzB,CADH,CADF;AAgBD;AAEF,KA9BkB;;AAAA;AAElB;;;;6BA8BQ;AACP,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEb,MAAM,CAACc,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,YAAL,EADH,CADF;AAKD;;;;EAvCsBP,S;;AA2CzB,eAAeK,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { \n  View, ScrollView, Text\n} from 'react-native';\nimport Spacer from './Spacer';\nimport Goal from './Goal';\nconst styles = require('../Styles');\n\nclass GoalWindow extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  displayGoals = () => {\n    if(this.props.goals.length <= 0) {\n      return(\n        <View style={{alignSelf:'center', padding:10}}>\n          <Text style={styles.text}>No Active Goals. Add One Above!</Text>\n        </View>\n      );\n    } else {\n      return(\n        <View>\n          {this.props.goals.map(goal => (\n            <View key={goal[\"key\"]} style={styles.padding}>\n              <Goal\n                name={goal[\"name\"]} \n                needed={goal[\"needed\"]} \n                earned={goal[\"earned\"]} \n                goal={goal}\n                removeGoal={this.props.removeGoal}\n                returnMoneyEarned={this.props.setGoalMoneyUsed}\n              /> \n            </View>\n          ))} \n        </View>\n      );\n    }\n    \n  }\n\n  render() {\n    return(\n      <ScrollView style={styles.scrollView}>   \n        {this.displayGoals()}\n      </ScrollView>\n    );\n  }\n\n}\n\nexport default GoalWindow;\n\n"]},"metadata":{},"sourceType":"module"}