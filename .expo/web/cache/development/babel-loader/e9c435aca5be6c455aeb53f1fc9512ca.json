{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require(\"../utils/invariant\");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n  routeNames.forEach(function (routeName) {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(\"The component for route '\" + routeName + \"' must be a React component. For example:\\n\\nimport MyScreen from './MyScreen';\\n...\\n\" + routeName + \": MyScreen,\\n}\\n\\nYou can also use a navigator:\\n\\nimport MyNavigator from './MyNavigator';\\n...\\n\" + routeName + \": MyNavigator,\\n}\");\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(\"Route '\" + routeName + \"' should declare a screen or a getScreen, not both.\");\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexports.default = validateRouteConfigMap;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/node_modules/@react-navigation/core/dist/routers/validateRouteConfigMap.js"],"names":["Object","defineProperty","exports","value","_reactIs","require","_invariant","_invariant2","_interopRequireDefault","obj","__esModule","default","validateRouteConfigMap","routeConfigs","routeNames","keys","length","forEach","routeName","routeConfig","screenComponent","getScreenComponent","isValidElementType","getScreen","Error","screen"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,sBAAxB;;AAEA,IAAIE,WAAW,GAAGC,sBAAsB,CAACF,UAAD,CAAxC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAM/F,SAASG,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5C,MAAIC,UAAU,GAAGd,MAAM,CAACe,IAAP,CAAYF,YAAZ,CAAjB;AACA,GAAC,GAAGN,WAAW,CAACI,OAAhB,EAAyBG,UAAU,CAACE,MAAX,GAAoB,CAA7C,EAAgD,iEAAhD;AAEAF,EAAAA,UAAU,CAACG,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC9B,QAAIC,WAAW,GAAGN,YAAY,CAACK,SAAD,CAA9B;AACA,QAAIE,eAAe,GAAGC,kBAAkB,CAACF,WAAD,CAAxC;;AAEA,QAAI,CAACC,eAAD,IAAoB,CAAC,CAAC,GAAGhB,QAAQ,CAACkB,kBAAb,EAAiCF,eAAjC,CAAD,IAAsD,CAACD,WAAW,CAACI,SAA3F,EAAsG;AACpG,YAAM,IAAIC,KAAJ,+BAAsCN,SAAtC,8FAIVA,SAJU,0GAWVA,SAXU,uBAAN;AAaD;;AAED,QAAIC,WAAW,CAACM,MAAZ,IAAsBN,WAAW,CAACI,SAAtC,EAAiD;AAC/C,YAAM,IAAIC,KAAJ,aAAoBN,SAApB,yDAAN;AACD;AACF,GAvBD;AAwBD;;AAED,SAASG,kBAAT,CAA4BF,WAA5B,EAAyC;AACvC,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SAAOA,WAAW,CAACM,MAAZ,GAAqBN,WAAW,CAACM,MAAjC,GAA0CN,WAAjD;AACD;;AAEDjB,OAAO,CAACS,OAAR,GAAkBC,sBAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactIs = require('react-is');\n\nvar _invariant = require('../utils/invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Make sure the config passed e.g. to StackRouter, TabRouter has\n * the correct format, and throw a clear error if it doesn't.\n */\nfunction validateRouteConfigMap(routeConfigs) {\n  var routeNames = Object.keys(routeConfigs);\n  (0, _invariant2.default)(routeNames.length > 0, 'Please specify at least one route when configuring a navigator.');\n\n  routeNames.forEach(routeName => {\n    var routeConfig = routeConfigs[routeName];\n    var screenComponent = getScreenComponent(routeConfig);\n\n    if (!screenComponent || !(0, _reactIs.isValidElementType)(screenComponent) && !routeConfig.getScreen) {\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\n\nimport MyScreen from './MyScreen';\n...\n${routeName}: MyScreen,\n}\n\nYou can also use a navigator:\n\nimport MyNavigator from './MyNavigator';\n...\n${routeName}: MyNavigator,\n}`);\n    }\n\n    if (routeConfig.screen && routeConfig.getScreen) {\n      throw new Error(`Route '${routeName}' should declare a screen or a getScreen, not both.`);\n    }\n  });\n}\n\nfunction getScreenComponent(routeConfig) {\n  if (!routeConfig) {\n    return null;\n  }\n\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\n}\n\nexports.default = validateRouteConfigMap;"]},"metadata":{},"sourceType":"script"}