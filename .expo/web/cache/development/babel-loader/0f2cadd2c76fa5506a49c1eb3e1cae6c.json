{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/devonhubert/languages/javascript/react_native/PayCheck/screens/LoadingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from 'firebase';\n\nvar styles = require(\"../Styles\");\n\nvar LoadingScreen = function (_Component) {\n  _inherits(LoadingScreen, _Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    var _this;\n\n    _classCallCheck(this, LoadingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.checkIfLoggedIn = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          this.props.navigation.navigate('MainPage');\n        } else {\n          this.props.navigation.navigate('LoginScreen');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkIfLoggedIn();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"Loading...\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LoadingScreen;\n}(Component);\n\nexport default LoadingScreen;","map":{"version":3,"sources":["/Users/devonhubert/languages/javascript/react_native/PayCheck/screens/LoadingScreen.js"],"names":["React","Component","firebase","styles","require","LoadingScreen","checkIfLoggedIn","auth","onAuthStateChanged","user","props","navigation","navigate","bind","container"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AACA,IAAMC,MAAM,GAAGC,OAAO,aAAtB;;IAEMC,a;;;;;;;;;;;;;;;;UAMJC,e,GAAkB,YAAK;AACrBJ,MAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CACE,UAASC,IAAT,EAAc;AACZ,YAAGA,IAAH,EAAQ;AACJ,eAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACH,SAFD,MAEO;AACH,eAAKF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACH;AACF,OAND,CAMEC,IANF,+BADF;AASD,K;;;;;;;wCAdkB;AACjB,WAAKP,eAAL;AACD;;;6BAcQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EA1ByBb,S;;AA6B5B,eAAeI,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport firebase from 'firebase';\nconst styles = require('../Styles');\n\nclass LoadingScreen extends Component {\n\n  componentDidMount(){\n    this.checkIfLoggedIn();\n  }\n  \n  checkIfLoggedIn = () =>{\n    firebase.auth().onAuthStateChanged(\n      function(user){\n        if(user){\n            this.props.navigation.navigate('MainPage');\n        } else {\n            this.props.navigation.navigate('LoginScreen');\n        }\n      }.bind(this)\n    );\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n        <Text></Text>\n        <ActivityIndicator size=\"large\"/>\n      </View>\n    );\n  }\n}\n\nexport default LoadingScreen;"]},"metadata":{},"sourceType":"module"}